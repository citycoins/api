openapi: 3.0.2
info:
  title: CityCoins API
  description: A simple API to interact with Stacks and CityCoins data. See the [CityCoins documentation site](https://docs.citycoins.co/developer-resources/api) or [GitHub for more info.](https://github.com/citycoins/api)
  version: 2.0.0
servers:
  - url: https://api.citycoins.co
    description: Main
  - url: https://citycoins-api.citycoins.workers.dev
    description: Development
tags:
  - name: Activation
    description: Endpoints for interacting with [CityCoins activation data](https://docs.citycoins.co/core-protocol/registration-and-activation)
    externalDocs:
      description: Contract Functions Reference
      url: https://docs.citycoins.co/contract-functions/activation
  - name: Mining
    description: Endpoints for interacting with [CityCoins mining data](https://docs.citycoins.co/core-protocol/mining-citycoins)
    externalDocs:
      description: Contract Functions Reference
      url: https://docs.citycoins.co/contract-functions/mining
  - name: Mining Claims
    description: Endpoints for interacting with [CityCoins mining claims data](https://docs.citycoins.co/core-protocol/mining-citycoins)
    externalDocs:
      description: Contract Functions Reference
      url: https://docs.citycoins.co/contract-functions/mining-claims
  - name: Stacking
    description: Endpoints for interacting with [CityCoins stacking data](https://docs.citycoins.co/core-protocol/stacking-citycoins)
    externalDocs:
      description: Contract Functions Reference
      url: https://docs.citycoins.co/contract-functions/stacking
  - name: Stacking Claims
    description: Endpoints for interacting with [CityCoins stacking claims data](https://docs.citycoins.co/core-protocol/stacking-citycoins)
    externalDocs:
      description: Contract Functions Reference
      url: https://docs.citycoins.co/contract-functions/stacking-claims
  - name: Token
    description: Endpoints for interacting with [CityCoins token data](https://docs.citycoins.co/core-protocol/token-configuration)
    externalDocs:
      description: Contract Functions Reference
      url: https://docs.citycoins.co/contract-functions/token
  - name: Stacks
    description: Wrappers and tools using the [Stacks Blockchain API](https://hirosystems.github.io/stacks-blockchain-api/)
    externalDocs:
      description: Hiro Documentation Reference
      url: https://docs.hiro.so/get-started/stacks-blockchain-api
  - name: Tools
    description: Wrappers for complex contract interactions and external data
paths:
  /stacks/get-block-height:
    get:
      summary: Get Stacks Block Height
      description: Get the current Stacks block height
      tags:
        - Stacks
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonNumber'
        "404":
          $ref: '#/components/responses/404NotFound'

  /stacks/get-bns-name/{address}:
    get:
      summary: Get BNS Name
      description: Get the BNS name for a given Stacks address
      tags:
        - Stacks
      parameters:
        - $ref: '#/components/parameters/address'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonString'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /stacks/get-stx-balance/{address}:
    get:
      summary: Get Stacks Balance
      description: Get the STX balance in uSTX for a given Stacks address
      tags:
        - Stacks
      parameters:
        - $ref: '#/components/parameters/address'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonString'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /stacks/get-date-at-block/{blockheight}:
    get:
      summary: Get Date at Block Height
      description: Get the ISO-formatted date for a given Stacks block height
      tags:
        - Stacks
      parameters:
        - $ref: '#/components/parameters/blockheight'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonString'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/activation/get-activation-block:
    get:
      summary: Get Activation Block
      description: Get the Stacks block height the token contract was activated at for a given CityCoin
      tags:
        - Activation
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonString'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/activation/get-activation-target:
    get:
      summary: Get Activation Target
      description: Get the Stacks block height the core contract was activated at for a given CityCoin
      tags:
        - Activation
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonString'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/activation/get-city-wallet:
    get:
      summary: Get City Wallet Address
      description: Get the city wallet address set in the auth contract for a given CityCoin and version.
      tags:
        - Activation
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonString'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'
  
  /{version}/{cityname}/activation/get-registered-users-nonce:
    get:
      summary: Get Registered Users
      description: Get the total number of users assigned an ID from the core contract for a given CityCoin
      tags:
        - Activation
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonNumber'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/activation/get-user/{userid}:
    get:
      summary: Get User
      description: Get the Stacks address for a given CityCoin and user ID
      tags:
        - Activation
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/userid'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonString'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/activation/get-user-id/{address}:
    get:
      summary: Get User ID
      description: Get the CityCoins user ID from the core contract for a given CityCoin and Stacks address
      tags:
        - Activation
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/address'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonNumber'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/mining/get-block-winner-id/{blockheight}:
    get:
      summary: Get Block Winner ID
      description: Gets the winning user ID for a given blockheight only *after the miner claims the reward*
      tags:
        - Mining
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/blockheight'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonNumber'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/mining/get-mining-stats-at-block/{blockheight}:
    get:
      summary: Get Mining Stats
      description: Get the mining stats for a given CityCoin and Stacks block height
      tags:
        - Mining
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/blockheight'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  amount:
                    type: string
                  amountToCity:
                    type: string
                  amountToStackers:
                    type: string
                  minersCount:
                    type: string
                  rewardClaimed:
                    type: boolean
              examples:
                "0":
                  value: 
                    amount: "253600601"
                    amountToCity: "76080180"
                    amountToStackers: "177520421"
                    minersCount: "6"
                    rewardClaimed: true
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/mining/get-miner-at-block/{blockheight}/{userid}:
    get:
      summary: Get Miner Info
      description: Get the miner details for a given CityCoin, Stacks block height, and user ID.
      tags:
        - Mining
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/blockheight'
        - $ref: '#/components/parameters/userid'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  lowValue:
                    type: string
                  highValue:
                    type: string
                  ustx:
                    type: string
                  winner:
                    type: boolean
              examples:
                "0":
                  value:
                    lowValue: "1000001"
                    highValue: "41000000"
                    ustx: "40000000"
                    winner: true
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/mining/get-last-high-value-at-block//{blockheight}:
    get:
      summary: Get Last High Value at Block
      description: Gets the last high value at the specified block used to determine the winner by the VRF, and increases with each miner commitment.
      tags:
        - Mining
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/blockheight'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonBoolean'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/mining/has-mined-at-block/{blockheight}/{userid}:
    get:
      summary: Has Mined at Block
      description: Check if a the user has mined with a given CityCoin, Stacks block height, and user ID.
      tags:
        - Mining
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/blockheight'
        - $ref: '#/components/parameters/userid'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonBoolean'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/mining-claims/can-claim-mining-reward/{blockheight}/{address}:
    get:
      summary: Can Claim Mining Reward
      description: Returns a boolean value indicating if the user's principal won and is eligible to claim the block reward at a given block height.
      tags:
        - Mining Claims
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/blockheight'
        - $ref: '#/components/parameters/address'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonBoolean'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/mining-claims/is-block-winner/{blockheight}/{address}:
    get:
      summary: Is Block Winner
      description: Returns a boolean value indicating if the user's principal won at a given block height.
      tags:
        - Mining Claims
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/blockheight'
        - $ref: '#/components/parameters/address'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonBoolean'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/stacking/get-stacking-stats-at-cycle/{cycleid}:
    get:
      summary: Get Stacking Stats
      description: Get the stacking stats for a given CityCoin and reward cycle ID
      tags:
        - Stacking
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/cycleid'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  amountToken:
                    type: string
                  amountUstx:
                    type: string
              examples:
                "0":
                  value:
                    amountToken: "1281126283"
                    amountUstx: "6617244628227"
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/stacking/get-stacker-at-cycle/{cycleid}/{userid}:
    get:
      summary: Get Stacker Info
      description: Get the amount stacked and amount to return for a given CityCoin, reward cycle ID, and user ID.
      tags:
        - Stacking
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/cycleid'
        - $ref: '#/components/parameters/userid'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  amountStacked:
                    type: string
                  toReturn:
                    type: string
              examples:
                "0":
                  value: 
                    amountStacked: "0"
                    toReturn: "0"
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/stacking/get-reward-cycle/{blockheight}:
    get:
      summary: Get Reward Cycle
      description: Get the reward cycle for a given CityCoin and Stacks block height
      tags:
        - Stacking
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/blockheight'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonNumber'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/stacking/get-first-stacks-block-in-reward-cycle/{cycleid}:
    get:
      summary: Get First Block In Reward Cycle
      description: Get the first Stacks block in a reward cycle for the given CityCoin and reward cycle ID
      tags:
        - Stacking
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/cycleid'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonNumber'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/stacking/stacking-active-at-cycle/{cycleid}:
    get:
      summary: Stacking Active at Cycle
      description: Returns a boolean value indicating if stacking is active at a given reward cycle, meaning a positive number of CityCoins are Stacked for that cycle.
      tags:
        - Stacking
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/cycleid'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonBoolean'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/stacking-claims/get-stacking-reward/{cycleid}/{userid}:
    get:
      summary: Get Stacking Reward
      description: |
        Gets the amount of STX a user can claim in a given reward cycle in uSTX. This method will only return a positive value if
        - the current block height is in a subsequent reward cycle
        - the Stacker locked up CityCoins in the target reward cycle
        - the Stacker locked up enough CityCoins to receive at least one uSTX
      tags:
        - Stacking Claims
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/cycleid'
        - $ref: '#/components/parameters/userid'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonNumber'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/token/get-coinbase-amount/{blockheight}:
    get:
      summary: Get Coinbase Amount
      description: Get the coinbase amount for a given CityCoin and Stacks block height
      tags:
        - Token
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/blockheight'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonNumber'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/token/get-coinbase-amounts:
    get:
      summary: Get Coinbase Amounts
      description: Gets the coinbase amounts for each coinbase threshold for a given CityCoin
      tags:
        - Token
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  coinbaseAmount1:
                    type: string
                  coinbaseAmount2:
                    type: string
                  coinbaseAmount3:
                    type: string
                  coinbaseAmount4:
                    type: string
                  coinbaseAmount5:
                    type: string
                  coinbaseAmountBonus:
                    type: string
                  coinbaseAmountDefault:
                    type: string
              examples:
                "0":
                  value: 
                    coinbaseAmount1: "100000000000"
                    coinbaseAmount2: "50000000000"
                    coinbaseAmount3: "25000000000"
                    coinbaseAmount4: "12500000000"
                    coinbaseAmount5: "6250000000"
                    coinbaseAmountBonus: "250000000000"
                    coinbaseAmountDefault: "3125000000"
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/token/get-coinbase-thresholds:
    get:
      summary: Get Coinbase Thresholds
      description: Get the coinbase thresholds (Stacks block heights) for a given CityCoin
      tags:
        - Token
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/blockheight'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  coinbaseThreshold1:
                    type: string
                  coinbaseThreshold2:
                    type: string
                  coinbaseThreshold3:
                    type: string
                  coinbaseThreshold4:
                    type: string
                  coinbaseThreshold5:
                    type: string
              examples:
                "0":
                  value: 
                    coinbaseThreshold1: "59497"
                    coinbaseThreshold2: "109497"
                    coinbaseThreshold3: "209497"
                    coinbaseThreshold4: "409497"
                    coinbaseThreshold5: "809497"
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/token/get-name:
    get:
      summary: Get Token Name
      description: Get the SIP-010 name for a given CityCoin
      tags:
        - Token
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonString'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{versions}/{cityname}/token/get-symbol:
    get:
      summary: Get Token Symbol
      description: Get the SIP-010 symbol for a given CityCoin
      tags:
        - Token
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonString'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/token/get-decimals:
    get:
      summary: Get Token Decimals
      description: Get the SIP-010 decimals for a given CityCoin
      tags:
        - Token
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonNumber'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/token/get-balance/{address}:
    get:
      summary: Get Token Balance
      description: Get the token balance for a given CityCoin and Stacks address
      tags:
        - Token
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/address'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonNumber'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/token/get-total-supply:
    get:
      summary: Get Total Supply
      description: Get the SIP-010 total supply for a given CityCoin
      tags:
        - Token
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonNumber'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/token/get-token-uri:
    get:
      summary: Get Token URI
      description: Get the token URI URL for a given CityCoin
      tags:
        - Token
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonString'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/token/get-token-uri-json:
    get:
      summary: Get Token URI JSON
      description: Get the contents of the token URI URL for a given CityCoin
      tags:
        - Token
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
              examples:
                "0":
                  value: 
                    name: "MiamiCoin"
                    description: "A CityCoin for Miami, ticker is MIA, Stack it to earn Stacks (STX)"
                    image: "https://cdn.citycoins.co/logos/miamicoin.png"
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/tools/get-city-configuration:
    get:
      summary: Get City Configuration
      description: Get the city configuration file depending on the select version and city name.
      tags:
        - Tools
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/cityconfig'
              examples:
                "0":
                  value:
                    cityName: "Miami"
                    deployed: true
                    deployer: "SP466FNC0P7JWTNM2R9T199QRZN1MYEDTAR0KP27"
                    auth:
                      name: "miamicoin-auth"
                      initialized: true
                    core:
                      name: "miamicoin-core-v1"
                      activated: false
                      startBlock: 24497
                      shutdown: true
                      shutdownBlock: 58917
                    token:
                      name: "miamicoin-token"
                      activated: true
                      activationBlock: 24497
                      displayName: "MiamiCoin"
                      tokenName: "miamicoin"
                      symbol: "MIA"
                      decimals: 0
                      logo: "https://cdn.citycoins.co/logos/miamicoin.png"
                      uri: "https://cdn.citycoins.co/metadata/miamicoin.json"
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{cityname}/tools/get-full-city-configuration:
    get:
      summary: Get Full City Configuration
      description: Gets the full city configuration file including all versions depending on the select city name.
      tags:
        - Tools
      parameters:
        - $ref: '#/components/parameters/cityname'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                additionalProperties:
                  $ref: '#/components/schemas/cityconfig'
              examples:
                "0":
                  value:
                    "v1":
                      cityName: "Miami"
                      deployed: true
                      deployer: "SP466FNC0P7JWTNM2R9T199QRZN1MYEDTAR0KP27"
                      auth:
                        name: "miamicoin-auth"
                        initialized: true
                      core:
                        name: "miamicoin-core-v1"
                        activated: false
                        startBlock: 24497
                        shutdown: true
                        shutdownBlock: 58917
                      token:
                        name: "miamicoin-token"
                        activated: true
                        activationBlock: 24497
                        displayName: "MiamiCoin"
                        tokenName: "miamicoin"
                        symbol: "MIA"
                        decimals: 0
                        logo: "https://cdn.citycoins.co/logos/miamicoin.png"
                        uri: "https://cdn.citycoins.co/metadata/miamicoin.json"
                    "v2":
                      cityName: "Miami"
                      deployed: true
                      deployer: "SP1H1733V5MZ3SZ9XRW9FKYGEZT0JDGEB8Y634C7R"
                      auth:
                        name: "miamicoin-auth-v2"
                        initialized: true
                      core:
                        name: "miamicoin-core-v2"
                        activated: false
                        startBlock: 58921
                        shutdown: false
                      token:
                        name: "miamicoin-token-v2"
                        activated: true
                        activationBlock: 24497
                        displayName: "MiamiCoin"
                        tokenName: "miamicoin"
                        symbol: "MIA"
                        decimals: 6
                        logo: "https://cdn.citycoins.co/logos/miamicoin.png"
                        uri: "https://cdn.citycoins.co/metadata/miamicoin.json"
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/tools/get-prices/{currency}:
    get:
      summary: Get Prices
      description: |
        Get the prices for STX or a given CityCoin, optionally specifying the currency
        - if no currency is specified, the default currency is `usd`
        - for this tool, the `:cityname` endpoint also accepts `stx` to show the current STX price
      tags:
        - Tools
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/currency'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  coingecko:
                    type: number
              examples:
                "0":
                  value:
                    coingecko: "0.1234"
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

  /{version}/{cityname}/tools/proof-of-hodl/{address}:
    get:
      summary: Check Proof of Hodl
      description: Check whether the user is holding or stacking a given CityCoin at a given address
      tags:
        - Tools
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/cityname'
        - $ref: '#/components/parameters/address'
      responses:
        "200":
          $ref: '#/components/responses/200SuccessJsonBoolean'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'

components:
  #-------------------------------
  # Reusable operation parameters
  #-------------------------------
  parameters:
    address: 
      in: path
      name: address
      required: true
      schema:
        type: string
      description: The Stacks address to query
    blockheight:
      in: path
      name: blockheight
      required: true
      schema:
        type: string
      description: The Stacks block height to query, or `current` for the current block height
    cityname:
      in: path
      name: cityname
      required: true
      schema:
        type: string
        enum: [mia, nyc]
      description: The CityCoin symbol to query
    currency:
      in: path
      name: currency
      required: true
      schema:
        type: string
        enum: [usd, eur, btc, sats]
      description: The currency to query, defaults to `usd` if left blank, full list of supported currencies can be found at https://api.coingecko.com/api/v3/simple/supported_vs_currencies
    cycleid:
      in: path
      name: cycleid
      required: true
      schema:
        type: string
      description: The reward cycle ID to query, or `current` for the current reward cycle ID
    userid:
      in: path
      name: userid
      required: true
      schema:
        type: string
      description: The user ID stored in a CityCoins core contract for a Stacks address
    version:
      in: path
      name: version
      required: true
      schema:
        type: string
      description: The major CityCoins contract version, e.g. v1, v2
  # Reusable objects
  schemas:
    cityconfig:
      type: object
      properties:
        cityName:
          type: string
        deployed:
          type: boolean
        deployer:
          type: string
        auth:
          type: object
          properties:
            name:
              type: string
            initialized:
              type: boolean
        core:
          type: object
          properties:
            name:
              type: string
            activated:
              type: boolean
            startBlock:
              type: number
            shutdown:
              type: boolean
            shutdownBlock:
              type: number
        token:
          type: object
          properties:
            name:
              type: string
            activated:
              type: boolean
            activationBlock:
              type: number
            displayName:
              type: string
            tokenName:
              type: string
            symbol:
              type: string
            decimals:
              type: number
            logo:
              type: string
            uri:
              type: string
  #-------------------------------
  # Reusable responses
  #-------------------------------
  responses:
    200SuccessJsonNumber:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              value:
                type: number
    200SuccessJsonString:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              value:
                type: string
    200SuccessJsonBoolean:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              value:
                type: boolean
    400BadRequest:
      description: Bad Request
      content:
        text/plain;charset=UTF-8:
          schema:
            type: string
    404NotFound:
      description: Not Found
      content:
        text/plain;charset=UTF-8:
          schema:
            type: string
